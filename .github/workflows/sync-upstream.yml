name: Sync Upstream and Open PR

on:
  schedule:
    - cron: "0 */6 * * *"  # Runs every 6 hours
  workflow_dispatch:  # Allows manual trigger

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to detect new commits

      - name: Add upstream repository
        run: |
          git remote add upstream https://github.com/Zed-Mod-School/mod-base-test-1.git
          git fetch upstream

      - name: Check for new commits
        id: check_commits
        run: |
          UPSTREAM_BRANCH="master"
          LOCAL_BRANCH="master"
          git fetch upstream $UPSTREAM_BRANCH
          NEW_COMMITS=$(git rev-list HEAD..upstream/$UPSTREAM_BRANCH --count)

          if [ "$NEW_COMMITS" -gt 0 ]; then
            echo "New commits found: $NEW_COMMITS"
            echo "new_commits=true" >> $GITHUB_ENV
          else
            echo "No new commits."
            echo "new_commits=false" >> $GITHUB_ENV
          fi

      - name: Create new branch and merge upstream changes
        if: env.new_commits == 'true'
        run: |
          PR_BRANCH="sync-upstream-$(date +%Y%m%d-%H%M%S)"
          git checkout -b $PR_BRANCH
          echo "PR_BRANCH=$PR_BRANCH" >> $GITHUB_ENV

      - name: Set Git Identity
        if: env.new_commits == 'true'
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Merge upstream changes
        if: env.new_commits == 'true'
        run: |
          git merge --no-edit upstream/master

      - name: Push Changes
        if: env.new_commits == 'true'
        run: |
          git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/Zed-Mod-School/fricked3-testing.git
          git push origin $PR_BRANCH

      - name: Create Pull Request
        if: env.new_commits == 'true'
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.PAT }}
          branch: ${{ env.PR_BRANCH }}
          base: master
          title: "Sync upstream changes"
          body: "This PR merges updates from the upstream repository."
          labels: "automated PR"
          assignees: "Github Actions"
